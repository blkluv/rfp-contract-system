
> backend@1.0.0 dev
> nodemon src/index.js

[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node src/index.js`[39m
[dotenv@17.2.2] injecting env (15) from .env -- tip: ‚öôÔ∏è  enable debug logging with { debug: true }
[dotenv@17.2.2] injecting env (0) from .env -- tip: üõ†Ô∏è  run anywhere with `dotenvx run -- yourcommand`
Executing (default): SELECT 1+1 AS result
Database connection established successfully.
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Users_role' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'rfp_contract_system'
Executing (default): ALTER TABLE "Users" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "Users"  ADD UNIQUE ("email");ALTER TABLE "Users" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "firstName" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "firstName" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "firstName" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "lastName" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "lastName" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "lastName" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "role" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "role" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_Users_role" AS ENUM(''buyer'', ''supplier''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "Users" ALTER COLUMN "role" TYPE "public"."enum_Users_role" USING ("role"::"public"."enum_Users_role");
Executing (default): ALTER TABLE "Users" ALTER COLUMN "company" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "company" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "company" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "phone" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "isActive" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "isActive" SET DEFAULT true;ALTER TABLE "Users" ALTER COLUMN "isActive" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "lastLogin" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "lastLogin" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "lastLogin" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'RFPs'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_RFPs_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'RFPs' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'RFPs' AND tc.table_catalog = 'rfp_contract_system'
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "RFPs" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "RFPs" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "category" SET NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "category" DROP DEFAULT;ALTER TABLE "RFPs" ALTER COLUMN "category" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "budget" DROP NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "budget" DROP DEFAULT;ALTER TABLE "RFPs" ALTER COLUMN "budget" TYPE DECIMAL(15,2);
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "currency" DROP NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "currency" SET DEFAULT 'USD';ALTER TABLE "RFPs" ALTER COLUMN "currency" TYPE VARCHAR(3);
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "deadline" SET NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "deadline" DROP DEFAULT;ALTER TABLE "RFPs" ALTER COLUMN "deadline" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "status" SET DEFAULT 'draft';DO 'BEGIN CREATE TYPE "public"."enum_RFPs_status" AS ENUM(''draft'', ''published'', ''response_submitted'', ''under_review'', ''approved'', ''rejected''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "RFPs" ALTER COLUMN "status" TYPE "public"."enum_RFPs_status" USING ("status"::"public"."enum_RFPs_status");
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "requirements" DROP NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "requirements" DROP DEFAULT;ALTER TABLE "RFPs" ALTER COLUMN "requirements" TYPE JSON;
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "evaluationCriteria" DROP NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "evaluationCriteria" DROP DEFAULT;ALTER TABLE "RFPs" ALTER COLUMN "evaluationCriteria" TYPE JSON;
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "submissionInstructions" DROP NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "submissionInstructions" DROP DEFAULT;ALTER TABLE "RFPs" ALTER COLUMN "submissionInstructions" TYPE TEXT;
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "contactEmail" DROP NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "contactEmail" DROP DEFAULT;ALTER TABLE "RFPs" ALTER COLUMN "contactEmail" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "isPublic" DROP NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "isPublic" SET DEFAULT false;ALTER TABLE "RFPs" ALTER COLUMN "isPublic" TYPE BOOLEAN;
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "publishedAt" DROP NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "publishedAt" DROP DEFAULT;ALTER TABLE "RFPs" ALTER COLUMN "publishedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "RFPs" DROP CONSTRAINT "RFPs_buyerId_fkey"
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "buyerId" SET NOT NULL;ALTER TABLE "RFPs"  ADD FOREIGN KEY ("buyerId") REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "RFPs" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "RFPs" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "RFPs" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "RFPs" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'RFPs' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'RFPResponses'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_RFPResponses_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'RFPResponses' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'RFPResponses' AND tc.table_catalog = 'rfp_contract_system'
Executing (default): ALTER TABLE "RFPResponses" ALTER COLUMN "proposal" SET NOT NULL;ALTER TABLE "RFPResponses" ALTER COLUMN "proposal" DROP DEFAULT;ALTER TABLE "RFPResponses" ALTER COLUMN "proposal" TYPE TEXT;
Executing (default): ALTER TABLE "RFPResponses" ALTER COLUMN "proposedBudget" DROP NOT NULL;ALTER TABLE "RFPResponses" ALTER COLUMN "proposedBudget" DROP DEFAULT;ALTER TABLE "RFPResponses" ALTER COLUMN "proposedBudget" TYPE DECIMAL(15,2);
Executing (default): ALTER TABLE "RFPResponses" ALTER COLUMN "timeline" DROP NOT NULL;ALTER TABLE "RFPResponses" ALTER COLUMN "timeline" DROP DEFAULT;ALTER TABLE "RFPResponses" ALTER COLUMN "timeline" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "RFPResponses" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "RFPResponses" ALTER COLUMN "status" SET DEFAULT 'submitted';DO 'BEGIN CREATE TYPE "public"."enum_RFPResponses_status" AS ENUM(''submitted'', ''under_review'', ''approved'', ''rejected''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "RFPResponses" ALTER COLUMN "status" TYPE "public"."enum_RFPResponses_status" USING ("status"::"public"."enum_RFPResponses_status");
Executing (default): ALTER TABLE "RFPResponses" ALTER COLUMN "notes" DROP NOT NULL;ALTER TABLE "RFPResponses" ALTER COLUMN "notes" DROP DEFAULT;ALTER TABLE "RFPResponses" ALTER COLUMN "notes" TYPE TEXT;
Executing (default): ALTER TABLE "RFPResponses" ALTER COLUMN "evaluationScore" DROP NOT NULL;ALTER TABLE "RFPResponses" ALTER COLUMN "evaluationScore" DROP DEFAULT;ALTER TABLE "RFPResponses" ALTER COLUMN "evaluationScore" TYPE INTEGER;
Executing (default): ALTER TABLE "RFPResponses" ALTER COLUMN "evaluationComments" DROP NOT NULL;ALTER TABLE "RFPResponses" ALTER COLUMN "evaluationComments" DROP DEFAULT;ALTER TABLE "RFPResponses" ALTER COLUMN "evaluationComments" TYPE TEXT;
Executing (default): ALTER TABLE "RFPResponses" ALTER COLUMN "submittedAt" DROP NOT NULL;ALTER TABLE "RFPResponses" ALTER COLUMN "submittedAt" DROP DEFAULT;ALTER TABLE "RFPResponses" ALTER COLUMN "submittedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "RFPResponses" ALTER COLUMN "reviewedAt" DROP NOT NULL;ALTER TABLE "RFPResponses" ALTER COLUMN "reviewedAt" DROP DEFAULT;ALTER TABLE "RFPResponses" ALTER COLUMN "reviewedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "RFPResponses" DROP CONSTRAINT "RFPResponses_rfpId_fkey"
Executing (default): ALTER TABLE "RFPResponses" ALTER COLUMN "rfpId" SET NOT NULL;ALTER TABLE "RFPResponses"  ADD FOREIGN KEY ("rfpId") REFERENCES "RFPs" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "RFPResponses" DROP CONSTRAINT "RFPResponses_supplierId_fkey"
Executing (default): ALTER TABLE "RFPResponses" ALTER COLUMN "supplierId" SET NOT NULL;ALTER TABLE "RFPResponses"  ADD FOREIGN KEY ("supplierId") REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "RFPResponses" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "RFPResponses" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "RFPResponses" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "RFPResponses" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "RFPResponses" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "RFPResponses" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'RFPResponses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Documents'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Documents_fileType' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Documents' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Documents' AND tc.table_catalog = 'rfp_contract_system'
Executing (default): ALTER TABLE "Documents" ALTER COLUMN "filename" SET NOT NULL;ALTER TABLE "Documents" ALTER COLUMN "filename" DROP DEFAULT;ALTER TABLE "Documents" ALTER COLUMN "filename" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Documents" ALTER COLUMN "originalName" SET NOT NULL;ALTER TABLE "Documents" ALTER COLUMN "originalName" DROP DEFAULT;ALTER TABLE "Documents" ALTER COLUMN "originalName" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Documents" ALTER COLUMN "filePath" SET NOT NULL;ALTER TABLE "Documents" ALTER COLUMN "filePath" DROP DEFAULT;ALTER TABLE "Documents" ALTER COLUMN "filePath" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Documents" ALTER COLUMN "fileSize" SET NOT NULL;ALTER TABLE "Documents" ALTER COLUMN "fileSize" DROP DEFAULT;ALTER TABLE "Documents" ALTER COLUMN "fileSize" TYPE INTEGER;
Executing (default): ALTER TABLE "Documents" ALTER COLUMN "mimeType" SET NOT NULL;ALTER TABLE "Documents" ALTER COLUMN "mimeType" DROP DEFAULT;ALTER TABLE "Documents" ALTER COLUMN "mimeType" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Documents" ALTER COLUMN "fileType" SET NOT NULL;ALTER TABLE "Documents" ALTER COLUMN "fileType" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_Documents_fileType" AS ENUM(''rfp_document'', ''response_document'', ''attachment''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "Documents" ALTER COLUMN "fileType" TYPE "public"."enum_Documents_fileType" USING ("fileType"::"public"."enum_Documents_fileType");
Executing (default): ALTER TABLE "Documents" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "Documents" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "Documents" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "Documents" ALTER COLUMN "version" DROP NOT NULL;ALTER TABLE "Documents" ALTER COLUMN "version" SET DEFAULT 1;ALTER TABLE "Documents" ALTER COLUMN "version" TYPE INTEGER;
Executing (default): ALTER TABLE "Documents" ALTER COLUMN "isLatest" DROP NOT NULL;ALTER TABLE "Documents" ALTER COLUMN "isLatest" SET DEFAULT true;ALTER TABLE "Documents" ALTER COLUMN "isLatest" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Documents" DROP CONSTRAINT "Documents_uploadedBy_fkey"
Executing (default): ALTER TABLE "Documents" ALTER COLUMN "uploadedBy" SET NOT NULL;ALTER TABLE "Documents"  ADD FOREIGN KEY ("uploadedBy") REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Documents" DROP CONSTRAINT "Documents_rfpId_fkey"
Executing (default): ALTER TABLE "Documents"  ADD FOREIGN KEY ("rfpId") REFERENCES "RFPs" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Documents" DROP CONSTRAINT "Documents_responseId_fkey"
Executing (default): ALTER TABLE "Documents"  ADD FOREIGN KEY ("responseId") REFERENCES "RFPResponses" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Documents" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Documents" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Documents" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Documents" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Documents" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Documents" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'AuditLogs'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'AuditLogs' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'AuditLogs' AND tc.table_catalog = 'rfp_contract_system'
Executing (default): ALTER TABLE "AuditLogs" DROP CONSTRAINT "AuditLogs_userId_fkey"
Executing (default): ALTER TABLE "AuditLogs" ALTER COLUMN "userId" SET NOT NULL;ALTER TABLE "AuditLogs"  ADD FOREIGN KEY ("userId") REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "AuditLogs" ALTER COLUMN "action" SET NOT NULL;ALTER TABLE "AuditLogs" ALTER COLUMN "action" DROP DEFAULT;ALTER TABLE "AuditLogs" ALTER COLUMN "action" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "AuditLogs" ALTER COLUMN "entityType" SET NOT NULL;ALTER TABLE "AuditLogs" ALTER COLUMN "entityType" DROP DEFAULT;ALTER TABLE "AuditLogs" ALTER COLUMN "entityType" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "AuditLogs" ALTER COLUMN "entityId" DROP NOT NULL;ALTER TABLE "AuditLogs" ALTER COLUMN "entityId" DROP DEFAULT;ALTER TABLE "AuditLogs" ALTER COLUMN "entityId" TYPE UUID;
Executing (default): ALTER TABLE "AuditLogs" ALTER COLUMN "oldValues" DROP NOT NULL;ALTER TABLE "AuditLogs" ALTER COLUMN "oldValues" DROP DEFAULT;ALTER TABLE "AuditLogs" ALTER COLUMN "oldValues" TYPE JSON;
Executing (default): ALTER TABLE "AuditLogs" ALTER COLUMN "newValues" DROP NOT NULL;ALTER TABLE "AuditLogs" ALTER COLUMN "newValues" DROP DEFAULT;ALTER TABLE "AuditLogs" ALTER COLUMN "newValues" TYPE JSON;
Executing (default): ALTER TABLE "AuditLogs" ALTER COLUMN "ipAddress" DROP NOT NULL;ALTER TABLE "AuditLogs" ALTER COLUMN "ipAddress" DROP DEFAULT;ALTER TABLE "AuditLogs" ALTER COLUMN "ipAddress" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "AuditLogs" ALTER COLUMN "userAgent" DROP NOT NULL;ALTER TABLE "AuditLogs" ALTER COLUMN "userAgent" DROP DEFAULT;ALTER TABLE "AuditLogs" ALTER COLUMN "userAgent" TYPE TEXT;
Executing (default): ALTER TABLE "AuditLogs" ALTER COLUMN "metadata" DROP NOT NULL;ALTER TABLE "AuditLogs" ALTER COLUMN "metadata" DROP DEFAULT;ALTER TABLE "AuditLogs" ALTER COLUMN "metadata" TYPE JSON;
Executing (default): ALTER TABLE "AuditLogs" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "AuditLogs" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "AuditLogs" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "AuditLogs" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "AuditLogs" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "AuditLogs" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'AuditLogs' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Database synchronized successfully.
node:events:496
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE: address already in use :::5000
    at Server.setupListenHandle [as _listen2] (node:net:1939:16)
    at listenInCluster (node:net:1996:12)
    at Server.listen (node:net:2101:7)
    at startServer (/Users/monk/Projects/clientProjects/rfp-contract-system/backend/src/index.js:125:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
Emitted 'error' event on Server instance at:
    at emitErrorNT (node:net:1975:8)
    at process.processTicksAndRejections (node:internal/process/task_queues:90:21) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 5000
}

Node.js v22.16.0
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
